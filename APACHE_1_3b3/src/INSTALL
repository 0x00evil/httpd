***
*** Building the Apache Web server absolutely REQUIRES an ANSI C-compliant
*** compiler.  If your compiler does not meet this requirement, don't
*** even bother trying to build the server; it won't work.
***
*** The server may or may not build correctly with a C++ compiler.  Making
*** it compilable with C++ is not a goal at this point, so if it doesn't
*** work please use a normal ANSI C compiler instead.
***

This release of Apache supports the notion of "optional modules".
However, the server has to know which modules are compiled into it, in
order for those modules to be effective; this requires generation of a
short bit of code ("modules.c") which simply has a list of them.

It is also necessary to choose the correct options for your platform.

To do this:

1) Copy the file "Configuration.tmpl" to "Configuration" and then edit
   "Configuration".  This contains the list and settings of various
   "Rules" and an additional section at the bottom which
   lists the modules which have been compiled in, and also names the
   files containing them.  You will need to:

   a) Adjust the Rules and EXTRA_CFLAGS|LIBS|LDFLAGS|INCLUDES if
      you feel so inclined.

   b) Uncomment lines corresponding to those optional modules you wish
      to include (among the Module lines at the bottom of the file),
      or add new lines corresponding to custom modules you have written.
      (See API.html for preliminary docs on how to do that).	

      Note that DBM auth has to be explicitly configured in, if you want
      it --- just uncomment the corresponding line.

2) Run the "Configure" script:

      % ./Configure
      Using config file: Configuration
      Creating Makefile
       + configured for <whatever> platform
       + setting C compiler to <whatever>
       + Adding selected modules
       + doing sanity check on compiler and options
      Creating Makefile in support
      Creating Makefile in main
      Creating Makefile in os/unix
      Creating Makefile in modules/standard
      %

   This generates new versions of the Makefile and of modules.c.  (If
   you want to maintain multiple configurations, you can say, e.g.,

      % ./Configure -file Configuration.ai
      Using config file: Configuration.ai
      Creating Makefile
       + configured for <whatever> platform
       + setting C compiler to <whatever>
       + Adding selected modules
       + doing sanity check on compiler and options
      Creating Makefile in support
      Creating Makefile in main
      Creating Makefile in os/unix
      Creating Makefile in modules/standard
      % 


3) Type "make".

The modules we place in the Apache distribution are the ones we have
tested and are used regularly by various members of the Apache
development group.  Additional modules contributed by members or third
parties with specific needs or functions are available at
<URL:http://www.apache.org/dist/contrib/modules/>.  There are
instructions on that page for linking these modules into the
core Apache code.

If during compilation you get a warning about a missing 'regex.h', set
WANTHSREGEX=yes in the 'Configuration', and let The Apache Group know
you needed to do this for your OS by filling out a problem report form
at <http://www.apache.org/bugdb.cgi>, or by sending a mail message to
apache-bugs@apache.org.  Include the output of the command "uname -a".
 

--------------------------------------------------------------------

Now that you have compiled Apache, go back to the README file in the
top-level directory of this distribution to continue the installation.
