# Apache makefile template (well, suffix).

# This is combined with the information in the "Configuration" file
# by the configure script to make the actual Makefile.

CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
LIBS=$(EXTRA_LIBS) $(LIBS1)
INCLUDES=$(INCLUDES1) $(INCLUDES_DEPTH0) $(EXTRA_INCLUDES)
LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)

OBJS= \
  modules.o \
  $(MODULES) \
  main/libmain.a \
  $(OSDIR)/libos.a \
  ap/libap.a

.c.o:
	$(CC) -c $(INCLUDES) $(CFLAGS) $(SPACER) $<

all: @@Configuration@@ $(TARGET)

@@Configuration@@: Configuration.tmpl
	@echo "@@Configuration@@ older than Configuration.tmpl, or doesn't exist."
	@echo "Consider copying Configuration.tmpl to @@Configuration@@, editing and rerunning"
	@echo "Configure."
	@echo "If not, you will at least have to touch @@Configuration@@."
	@false

$(TARGET):  subdirs modules.o
	$(CC) -c $(CFLAGS) buildmark.c
	$(CC) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) -o $(TARGET) buildmark.o $(OBJS) $(REGLIB) $(LIBS)

subdirs:
	for i in $(SUBDIRS); do \
		( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)') || exit 1; \
	done

support: support-dir

support-dir:
	cd support; $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)'

clean:
	rm -f $(TARGET) *.o
	for i in $(SUBDIRS); do \
		( cd $$i && $(MAKE) $@ ) || exit 1; \
	done

dist.tar: 
	# Assure a semi-sensible configuration going out...
	cp Makefile.orig Makefile
	cp modules.c.orig modules.c
	tar cvf dist.tar README INSTALL CHANGES TODO API.html \
		Configuration Configure Makefile.tmpl Makefile *.h *.c

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && $(CC) -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && mv Makefile.tmpl Makefile.tmpl.bak \
	    && mv Makefile.new Makefile.tmpl
	for i in $(SUBDIRS); do \
	    ( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' depend) || exit 1; \
	done

#Dependencies

$(OBJS): Makefile

# DO NOT REMOVE
buildmark.o: buildmark.c
modules.o: modules.c include/httpd.h include/conf.h os/unix/os.h \
 include/hsregex.h include/alloc.h include/buff.h include/ap.h \
 include/http_config.h
tt.o: tt.c
