<?xml version="1.0" encoding="EUC-JP"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja"><head><!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -->
<title>mod_include - Apache HTTP サーバ</title>
<link href="../style/css/manual.css" rel="stylesheet" media="all" type="text/css" title="Main stylesheet" />
<link href="../style/css/manual-loose-100pc.css" rel="alternate stylesheet" media="all" type="text/css" title="No Sidebar - Default font size" />
<link href="../style/css/manual-print.css" rel="stylesheet" media="print" type="text/css" />
<link href="../images/favicon.ico" rel="shortcut icon" /></head>
<body>
<div id="page-header">
<p class="menu"><a href="../mod/">モジュール</a> | <a href="../mod/directives.html">ディレクティブ</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">用語</a> | <a href="../sitemap.html">サイトマップ</a></p>
<p class="apache">Apache HTTP サーバ バージョン 2.0</p>
<img alt="" src="../images/feather.gif" /></div>
<div class="up"><a href="./"><img title="&lt;-" alt="&lt;-" src="../images/left.gif" /></a></div>
<div id="path">
<a href="http://www.apache.org/">Apache</a> &gt; <a href="http://httpd.apache.org/">HTTP サーバ</a> &gt; <a href="http://httpd.apache.org/docs-project/">ドキュメンテーション</a> &gt; <a href="../">バージョン 2.0</a> &gt; <a href="./">モジュール</a></div>
<div id="page-content">
<div id="preamble"><h1>Apache モジュール mod_include</h1>
<div class="toplang">
<p><span>Available Languages: </span><a href="../en/mod/mod_include.html" hreflang="en" rel="alternate" title="English">&nbsp;en&nbsp;</a> |
<a href="../ja/mod/mod_include.html" title="Japanese">&nbsp;ja&nbsp;</a></p>
</div>
<div class="outofdate">This translation may be out of date. Check the
            English version for recent changes.</div>
<table class="module"><tr><th><a href="module-dict.html#Description">説明:</a></th><td>サーバがパースする html ドキュメント (Server Side Includes)</td></tr>
<tr><th><a href="module-dict.html#Status">ステータス:</a></th><td>Base</td></tr>
<tr><th><a href="module-dict.html#ModuleIdentifier">モジュール識別子:</a></th><td>include_module</td></tr>
<tr><th><a href="module-dict.html#SourceFile">ソースファイル:</a></th><td>mod_include.c</td></tr></table>
<h3>概要</h3>


    <p>このモジュールはファイルがクライアントに送られる前に処理するフィルタを
    提供します。処理の内容は<em>要素</em>と呼ばれる特別な形式の SGML コメントにより
    制御されます。これらの要素は条件分岐や、他のファイルや
    プログラムの出力の取り込み、環境変数の設定や表示を行なうことが
    できます。</p>

</div>
<div id="quickview"><h3 class="directives">ディレクティブ</h3>
<ul id="toc">
<li><img alt="" src="../images/down.gif" /> <a href="#ssiendtag">SSIEndTag</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#ssierrormsg">SSIErrorMsg</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#ssistarttag">SSIStartTag</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#ssitimeformat">SSITimeFormat</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#ssiundefinedecho">SSIUndefinedEcho</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#xbithack">XBitHack</a></li>
</ul>
<h3>トピック</h3>
<ul id="topics">
<li><img alt="" src="../images/down.gif" /> <a href="#enabling">Server-Side Includes を有効にする</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#basic">基本要素</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#includevars">Include 変数</a></li>
<li><img alt="" src="../images/down.gif" /> 変数置換</li>
<li><img alt="" src="../images/down.gif" /> <a href="#flowctrl">フロー制御用要素</a></li>
<li><img alt="" src="../images/down.gif" /> ErrorDocuments で Server Side Includes を使う</li>
<li><img alt="" src="../images/down.gif" /> Server Side Includes での PATH_INFO</li>
</ul><h3>参照</h3>
<ul class="seealso">
<li><code class="directive"><a href="../mod/core.html#options">Options</a></code></li>
<li><code class="directive"><a href="../mod/core.html#setoutputfilter">SetOutputFilter</a></code></li>
<li><code class="directive"><a href="../mod/core.html#acceptpathinfo">AcceptPathInfo</a></code></li>
</ul></div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="enabling" id="enabling">Server-Side Includes を有効にする</a></h2>
    

    <p>Server Side Includes は <code>INCLUDES</code>
    <a href="../filter.html">フィルタ</a> により実装されています。
    Server-side include のディレクティブを含むドキュメントの拡張子が
    .shtml の場合、以下のディレクティブでは Apache がそれらを
    パースして、その結果できるドキュメントに <code>text/html</code> の
    MIME タイプを割り当てます:</p>

    <div class="example"><p><code>
      AddType text/html .shtml<br />
      AddOutputFilter INCLUDES .shtml
    </code></p></div>

    <p>以下のディレクティブは shtml ファイルのあるディレクトリで指定されている
    必要があります (通常は <code>&lt;Directory&gt;</code> セクション
    で指定しますが、<code>AllowOverride Options</code> が設定されていると、
    .htaccess ファイルに書くこともできます):</p>

    <div class="example"><p><code>
      Options +Includes
    </code></p></div>

    <p>互換性を保つために、<code>server-parsed</code>
    <a href="../handler.html">ハンドラ</a> も INCLUDES フィルタを
    有効にします。MIME タイプ <code>text/x-server-parsed-html</code> や
    <code>text/x-server-parsed-html3</code> のドキュメントに対しても
    Apache は INCLUDES フィルタを有効にします (出力されるものは
    MIME タイプ <code>text/html</code> になります)。</p>

    <p>詳しい情報は <a href="../howto/ssi.html"> Server Side
    Includes のチュートリアル</a> を読んでください。</p>

</div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="basic" id="basic">基本要素</a></h2>
    
    <p>ドキュメントは、SGML のコメントとして特別なコマンドが埋め込まれた
    HTML ドキュメントとしてパースされます。コマンドの構文は次のように
    なっています:</p>

    <div class="example"><p><code>
      <code>&lt;!--#</code><em>element attribute=value
      attribute=value ...</em> <code>--&gt;</code>
    </code></p></div>

    <p>値 (訳注: value) は二重引用符で囲まれることがよくあります。多くのコマンドは
    属性-値 (訳注: attribute-value) の組を一つだけ指定できます。
    コメントの終わり (<code>--&gt;</code>)
    の前には、SSI の句の一部だと解釈されないようにするために空白を
    入れてください。</p>

    <p>要素 (訳注: element) には以下のものを指定することができます:</p>

    <dl>
      <dt><strong>config</strong></dt>

      <dd>
        <p>このコマンドはパース時の振る舞いを制御します。指定可能な属性は:</p>

        <dl>
          <dt><strong>errmsg</strong></dt>

          <dd>値はドキュメントのパース時にエラーが発生した場合に
          クライアントに送られるメッセージです。</dd>

          <dt><strong>sizefmt</strong></dt>

          <dd>この値はファイルの大きさを表示するときに使われるフォーマットを
          設定します。有効な値はバイト単位で表示する <code>bytes</code> と、
          状況に応じて Kb や Mb を使う <code>abbrev</code> です。</dd>

          <dt><strong>timefmt</strong></dt>

          <dd>値は日付を表示するときに <code>strftime(3)</code> ライブラリ関数が
          使う文字列です。</dd>
        </dl>
      </dd>

      <dt><strong><a name="echo">echo</a></strong></dt>

      <dd>
        <p>このコマンドは以下で定義されている <a href="#includevars">include
        変数</a> を表示します。変数が設定されていない場合は <code>(none)</code>
        と表示されます。日付はその時点での <code>timefmt</code> に従って
        表示されます。</p>

        <p>属性:</p> 

        <dl>
          <dt><strong>var</strong></dt>

          <dd>値は表示する変数の名前です。</dd>

          <dt><strong>encoding</strong></dt>

          <dd>Apache が変数を出力する前に、特別な文字をエンコードする
          方法を指定します。"none" に設定されていると、エンコードは行なわれません。
          "url" に設定されていると、URL エンコード (%-エンコードとも
          呼ばれています。これはリンクの URL での使用に適しています) が
          行なわれます。<code>echo</code> 要素の開始時は、デフォルトは
          "entity" に設定されています。これはエンティティエンコード
          (段落やテキストなどのブロックレベルの HTML エレメントのコンテキストに
          適しています) を行ないます。これは <code>encoding</code> 属性
          を加えることで変更できます。変更は次の <code>encoding</code> 属性か、
          要素の終了まで効力を持ちます。<code>encoding</code> 属性は
          エンコードの変更をしたい <code>var</code> の<em>前に</em> ある
          必要があることに注意してください。また、ISO-8859-1 エンコーディングで
          定義されている特別な文字だけがエンコードされます。
          別の文字のエンコーディングが使われている場合、このエンコーディングは
          望みの結果をもたらさないかもしれません。これは、Apache 1.3.12 以降
          で使用可能です。以前のバージョンはエンコードを行ないません。</dd>
        </dl>
      </dd>

      <dt><strong>exec</strong></dt>

      <dd>
        <p>exec コマンドは指定されたシェルコマンドや CGI スクリプトを
        実行します。<code class="module"><a href="../mod/mod_cgi.html">mod_cgi</a></code> がサーバに組み込まれていることが
        必要です。IncludesNOEXEC <code class="directive"><a href="../mod/core.html#option">Option</a></code> はこのコマンドを無効にします。
        使用可能な属性は:</p>

        <dl>
          <dt><strong>cgi</strong></dt>

          <dd>
            <p>値は (%-エンコードされた) URL を指定します。パスが
            スラッシュ (/) で始まらないときは、ドキュメントからの
            相対パスとして扱われます。このパスで参照されているドキュメントは
            サーバが CGI スクリプトとして扱っていなくても CGI スクリプトとして
            起動されます。ただし、スクリプトのあるディレクトリでは
            (<code class="directive"><a href="../mod/mod_alias.html#scriptalias">ScriptAlias</a></code>
            や ExecCGI <code class="directive"><a href="../mod/core.html#option">Option</a></code> によって)
            CGI スクリプトの使用が許可されている必要があります。</p>

            <p>CGI スクリプトには PATH_INFO とクライアントからの
            元々のリクエストのクエリー文字列が渡されます。スクリプトは標準
            <a href="mod_cgi.html">CGI</a> 環境に加えて、include 変数を
            使用することができます。</p>

            <p>例えば:</p>

  <div class="example"><p><code>&lt;!--#exec cgi="/cgi-bin/example.cgi" --&gt;</code></p></div>

            <p>スクリプトが出力の代わりに Location: ヘッダを返すと、
            HTML のアンカーに変換されます。</p>

            <p><code>exec cgi</code> よりも、
            <code><a href="#includevirtual">include virtual</a></code>
            の方を使うようにしてください。特に、CGI への追加の引数を
            クエリー文字列を使って渡すことは <code>exec cgi</code> は
            できませんが、<code>include virtual</code> は以下のようにして
            可能です。</p>

  <div class="example"><p><code>
  &lt;!--#include virtual="/cgi-bin/example.cgi?argument=value" --&gt;
  </code></p></div>

          </dd>

          <dt><strong>cmd</strong></dt>

          <dd>
          <p>サーバは指定された文字列を <code>/bin/sh</code> を使って
          実行します。コマンドは通常の CGI 変数に加えて <a href="#includevars">include 変数</a>も使うことができます。</p>

        <p>ほとんどいつも、<code><a href="#includevirtual">#include 
        virtual</a></code> を使う方が <code>#exec cgi</code> や <code>#exec
        cmd</code> を使うよりも良い方法です。前者 (<code>#include virtual</code>)
        は標準の Apache のサブリクエスト機構を使ってファイルやスクリプトの
        出力を取り込みます。その方法の方がよりたくさん試され、
        よく維持されています。</p>

          <p>さらに、Win32 のようないくつかのプラットフォームや、suexec
          を使っている unix では、<code>exec</code> ディレクティブのコマンドに
          引数を渡したり、コマンドに空白を入れることはできません。
          ですから、以下のものは unix の suexec でない設定では動作しますが、
          Win32 や suexec を使っている unix では期待した結果にはなりません:</p>

   <div class="example"><p><code>
   &lt;!--#exec cmd="perl /path/to/perlscript arg1 arg2" --&gt;
   </code></p></div>

          </dd>
        </dl>
      </dd>

      <dt><strong>fsize</strong></dt>

      <dd>
        <p>このコマンドは指定されたファイルの大きさを <code>sizefmt</code> の
        書式指定に基づいて出力します。属性は:</p>

        <dl>
          <dt><strong>file</strong></dt>

          <dd>値は解析されているドキュメントの存在するディレクトリからの
          相対パスです。</dd>

          <dt><strong>virtual</strong></dt>

          <dd> 値は (% エンコードされた) URL-path です。スラッシュ (/) で
          始まらないときはドキュメントからの相対パスとして扱われます。</dd>

        </dl>
      </dd>

      <dt><strong>flastmod</strong></dt>

      <dd>このコマンドは指定されたファイルの最終修正時刻を
      <code>timefmt</code> 書式指定に従って表示します。
      指定可能な属性は <code>fsize</code> コマンドと同じです。</dd>

      <dt><strong>include</strong></dt>

      <dd>
        <p>このコマンドは別の文書やファイルのテキストを解析しているファイルに
        挿入します。挿入されるファイルはアクセス制御の管理下にあります。
        解析しているファイルの存在するディレクトリに
        <a href="core.html#options">Option</a> IncludesNOEXEC が
        設定されていて、文書の挿入によりプログラムが実行されるような場合は、
        その文書は挿入されません。その Option の設定は CGI スクリプトの実行を
        禁止するからです。その他の場合は、
        クエリー文字列も含め、コマンドで指定された
        完全な URL を使って普通に CGI スクリプトが呼び出されます。</p>

        <p>属性が文書の位置を指定します。include コマンドに与えられたそれぞれの
        属性に対して挿入作業が行なわれます。有効な属性は:</p>

        <dl>
          <dt><strong>file</strong></dt>

          <dd>値は解析されているドキュメントの存在するディレクトリからの
          相対パスです。
          <code>../</code> を含んでいたり、絶対パスを指定したりはできません。
          ですから、ドキュメントルートの外にあるファイルや、ディレクトリ構造で
          上位にあるファイルを挿入することはできません。
          常にこの属性よりは、<code>virtual</code> 属性を使うようにしてください。
          </dd>

          <dt><strong><a name="includevirtual">virtual</a></strong></dt>

         <dd>
          <p>値は解析されているドキュメントからの (% エンコードされた) URL
          です。URL にはスキームやホスト名を含めることはできません。パスと、
          もしあればクエリー文字列を指定できるだけです。スラッシュ (/) から
          始まらない場合は、ドキュメントからの相対パスとして扱われます。</p>

          <p>URL は属性から作られ、その URL をクライアントがアクセスしたときに
          出力される内容が解析後の出力に含められます。ですから、挿入される
          ファイルは入れ子構造にすることができます。</p>

          <p>指定された URL が CGI プログラムであった場合は、
          プログラムが実行され、その出力が解析しているファイル中の
          ディレクティブがあった位置に挿入されます。CGI の url に
          クエリー URL を入れることもできます:</p>

     <div class="example"><p><code>
     &lt;!--#include virtual="/cgi-bin/example.cgi?argument=value" --&gt;
     </code></p></div>
           
           <p>HTML ドキュメントに CGI プログラムの出力を含める方法としては、
           <code>include virtual</code> の方が <code>exec cgi</code> よりも
           好ましい方法です。</p>
          </dd>
        </dl>
      </dd>

      <dt><strong>printenv</strong></dt>

      <dd>
      <p>これは、存在するすべての変数とその値を表示します。Apache 1.3.12 から、
      特別な文字は出力される前にエンティティエンコード (詳細は <a href="#echo"><code>echo</code></a> 要素を参照) されるようになりました。
      属性はありません。</p>

      <p>例えば:</p>

      <div class="example"><p><code>
      &lt;!--#printenv --&gt;
      </code></p></div>

      <p><strong>printenv</strong> 要素は Apache 1.2 以降でのみ使用可能です。</p>
    </dd>
      <dt><strong>set</strong></dt>

      <dd>
        これは変数の値を設定します。属性は:

        <dl>
          <dt><strong>var</strong></dt>

          <dd>設定する変数の名前。</dd>

          <dt><strong>value</strong></dt>

          <dd>変数に設定する値。</dd>
        </dl>
        <p>例えば:</p>
        
        <div class="example"><p><code>
        &lt;!--#set var="category" value="help" --&gt;
        </code></p></div>

      <p><strong>set</strong> 要素は Apache 1.2 以降でのみ使用可能です。</p>
      </dd>
    </dl>
</div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="includevars" id="includevars">Include 変数</a></h2>
    

    <p>標準 CGI 環境の変数に加えて、<code>echo</code> コマンドや、
    <code>if</code> や <code>elif</code>, それにドキュメントから呼び出される
    すべてのプログラムから使用できる変数があります。</p>

    <dl>
      <dt>DATE_GMT</dt>

      <dd>グリニッジ標準時による現在時刻。</dd>

      <dt>DATE_LOCAL</dt>

      <dd>ローカルの標準時による現在時刻。</dd>

      <dt>DOCUMENT_NAME</dt>

      <dd>ユーザがリクエストした (ディレクトリを除いた) ファイル名。</dd>

      <dt>DOCUMENT_URI</dt>

      <dd>ユーザがリクエストした (% エンコードされた) URL-path。
      挿入ファイルが入れ子になっている場合は、解析されている
     ドキュメントの URL では<em>ない</em>ことに注意してください。</dd>

      <dt>LAST_MODIFIED</dt>

      <dd>ユーザがリクエストしたドキュメントの最終修正時刻。</dd>
    </dl>
</div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2>変数置換</h2>
    

    <p>変数置換はたいていの場合 SSI ディレクティブの引数として妥当な場所にある
    引用符で囲まれた文字列中で行なわれます。これに該当するものには、
    <code>config</code>,
    <code>exec</code>, <code>flastmod</code>, <code>fsize</code>,
    <code>include</code>, <code>echo</code>, <code>set</code> の
    各ディレクティブと、条件分岐用のオペレータへの引数があります。
    ドル記号はバックスラッシュを使うことで使うことができます:</p>

<div class="example"><p><code>
    &lt;!--#if expr="$a = \$test" --&gt;
</code></p></div>

    <p>変数名としてみなされる文字列の中で変数への参照を置換する必要があるときは、
    シェルでの変数置換のように、中括弧で括ることで区別することができます:</p>

<div class="example"><p><code>
    &lt;!--#set var="Zed" value="${REMOTE_HOST}_${REQUEST_METHOD}" --&gt;
</code></p></div>

    <p>この例では、<code>REMOTE_HOST</code> が
    "<code>X</code>" で <code>REQUEST_METHOD</code> が
    "<code>Y</code>" のときに変数 <code>Zed</code> を "<code>X_Y</code>"
    に設定します。</p>

    <p>例: 以下の例では、DOCUMENT_URI が /foo/file.html のときに
    "in foo" を、/bar/file.html のときに "in bar" を、どちらでもないときには
    "in neither" を表示します:</p>

<div class="example"><p><code>
    &lt;!--#if expr="\"$DOCUMENT_URI\" = \"/foo/file.html\"" --&gt;<br />
&nbsp;&nbsp;    in foo<br />
    &lt;!--#elif expr="\"$DOCUMENT_URI\" = \"/bar/file.html\"" --&gt;<br />
&nbsp;&nbsp;    in bar<br />
    &lt;!--#else --&gt;<br />
&nbsp;&nbsp;    in neither<br />
    &lt;!--#endif --&gt;
</code></p></div>
</div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="flowctrl" id="flowctrl">フロー制御用要素</a></h2>
    

    <p>Apache 1.2 以降で使用できます。基本フロー制御要素は:</p>

<div class="example"><p><code>
    &lt;!--#if expr="<em>test_condition</em>" --&gt;<br />
    &lt;!--#elif expr="<em>test_condition</em>" --&gt;<br />
    &lt;!--#else --&gt;<br />
    &lt;!--#endif --&gt;
</code></p></div>

    <p><strong><code>if</code></strong> 要素はプログラミング言語の
    if 文と同じように動作します。条件が評価され、結果が真であれば
    <strong><code>elif</code></strong> か
    <strong><code>else</code></strong> か <strong><code>endif</code></strong>
    までの文字列が出力に挿入されます。</p>

    <p><strong><code>elif</code></strong> や <strong><code>else</code></strong>
    文は test_condition が偽のときにテキストを出力に挿入するために使われます。
    これらの要素はあってもなくても構いません。</p>

    <p><strong><code>endif</code></strong> 要素は <strong><code>if</code></strong>
    要素を終了させます。この要素は必須です。</p>

    <p><em>test_condition</em> は以下のどれかです:</p>

    <dl>
      <dt><em>string</em></dt>

      <dd><em>string</em> が空でない場合に真です</dd>

      <dt><em>string1</em> = <em>string2</em><br />
       <em>string1</em> != <em>string2</em><br />
       <em>string1</em> &lt; <em>string2</em><br />
       <em>string1</em> &lt;= <em>string2</em><br />
       <em>string1</em> &gt; <em>string2</em><br />
       <em>string1</em> &gt;= <em>string2</em></dt>

      <dd>string1 と string2 を比較します。string2 が <em>/string/</em>
      という形式であれば、正規表現として比較されます。正規表現は
      Unix の <code>egrep</code> コマンドと同じ構文です。</dd>

      <dt>( <em>test_condition</em> )</dt>

      <dd><em>test_condition</em> が真のときに真です</dd>

      <dt>! <em>test_condition</em></dt>

      <dd><em>test_condition</em> が偽のときに真です</dd>

      <dt><em>test_condition1</em> &amp;&amp;
      <em>test_condition2</em></dt>

      <dd><em>test_condition1</em> と
      <em>test_condition2</em> の両方が真のときに真です</dd>

      <dt><em>test_condition1</em> || <em>test_condition2</em></dt>

      <dd><em>test_condition1</em> と
      <em>test_condition2</em> のどちらかが真のときに真です</dd>
    </dl>

    <p>"<em>=</em>" と "<em>!=</em>" の方が "<em>&amp;&amp;</em>" より
    きつく束縛します。"<em>!</em>" の束縛が一番きつくなっています。
    ですから以下の二つは等価です:</p>

<div class="example"><p><code>
    &lt;!--#if expr="$a = test1 &amp;&amp; $b = test2" --&gt;<br />
    &lt;!--#if expr="($a = test1) &amp;&amp; ($b = test2)" --&gt;
</code></p></div>

    <p>変数やオペレータとして認識されないものはすべて文字列として
    扱われます。文字列は引用符で囲むこともできます: <em>'string'</em>
    のように。引用符で囲まれていない文字列には空白 (スペースとタブ)
    を含めることはできません。それらは変数などの句を分離するために
    使われているからです。複数の文字列が続いているときは、
    空白を間に入れて一つにくっつけられます。ですから、</p>

<div class="example"><pre><em>string1    string2</em>  は <em>string1 string2</em> になります</pre><pre><em>'string1    string2'</em> は <em>string1    string2</em> になります</pre></div>

</div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2>ErrorDocuments で Server Side Includes を使う</h2>
    

    <p>mod_include の機能を使って、国際化され、カスタマイズされたエラー
    ドキュメントを提供するための方法を説明した
    <a href="../misc/custom_errordocs.html">文書</a>があります。</p>

</div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2>Server Side Includes での PATH_INFO</h2>

    <p>server-side includes で処理されるファイルは PATH_INFO
    (後に付いたパス名の情報) 付きのリクエストを受け付けなくなりました。
    PATH_INFO の付いたリクエストを受け付けるように設定するために、<code class="directive"><a href="../mod/core.html#acceptpathinfo">AcceptPathInfo</a></code> ディレクティブを
    使うことができます。</p>

</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="SSIEndTag" id="SSIEndTag">SSIEndTag</a> <a name="ssiendtag" id="ssiendtag">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>include 要素を終了させる文字列</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>SSIEndTag <em>tag</em></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>SSIEndTag "--&gt;"</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル, バーチャルホスト</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Base</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_include</td></tr>
<tr><th><a href="directive-dict.html#Compatibility">互換性:</a></th><td>バージョン 2.0.30 以降で使用可能。
</td></tr>
</table>
    <p>このディレクティブは mod_include が探す、include 要素の終了を示す
    文字列を変更します。</p>

    <div class="example"><h3>例</h3><p><code>
    
    SSIEndTag "%&gt;"
    </code></p></div>


<h3>参照</h3>
<ul>
<li><code class="directive"><a href="#ssistarttag">SSIStartTag</a></code></li>
</ul>
</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="SSIErrorMsg" id="SSIErrorMsg">SSIErrorMsg</a> <a name="ssierrormsg" id="ssierrormsg">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>SSI のエラーがあったときに表示されるエラーメッセージ</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>SSIErrorMsg <em>message</em></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>SSIErrorMsg 
"[an error occurred while processing this directive]"</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル, バーチャルホスト, ディレクトリ, .htaccess</td></tr>
<tr><th><a href="directive-dict.html#Override">上書き:</a></th><td>All</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Base</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_include</td></tr>
<tr><th><a href="directive-dict.html#Compatibility">互換性:</a></th><td>バージョン 2.0.30 以降で使用可能</td></tr>
</table>
    <p>SSIErrorMsg ディレクティブは mod_include がエラーが起こったときに
    表示するメッセージを変更します。プロダクションサーバでは
    メッセージがユーザに表示されないようにするために
    デフォルトエラーメッセージを <code>"&lt;!-- Error --&gt;"</code>
    に変えるというようなことを考えるかもしれません。</p>

    <p>このディレクティブは <code>&lt;!--#config
    errmsg=<em>message</em> --&gt;</code> 要素と同じ効果になります。</p>

    <div class="example"><h3>例</h3><p><code>
    
    SSIErrorMsg "&lt;!-- Error --&gt;"
    </code></p></div>


</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="SSIStartTag" id="SSIStartTag">SSIStartTag</a> <a name="ssistarttag" id="ssistarttag">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>include 要素を開始する文字列</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>SSIStartTag <em>tag</em></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>SSIStartTag "&lt;!--"</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル, バーチャルホスト</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Base</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_include</td></tr>
<tr><th><a href="directive-dict.html#Compatibility">互換性:</a></th><td>バージョン 2.0.30 以降で使用可能。</td></tr>
</table>

    <p>このディレクティブは mod_include が探す、include 要素の開始を
    示す文字列を変更します。</p>

    <p>二つのサーバが (もしかすると違うときに) ファイルの出力を解析していて、
    それぞれに違うコマンドを処理させたい、
    というようなときにこのオプションを使います。</p>

    <div class="example"><h3>例</h3><p><code>
    
    SSIStartTag "&lt;%"
    </code></p></div>

    <p>上の例と、それに対応する
    <code class="directive"><a href="#ssiendtag">SSIEndTag</a></code> を使うと、
    下の例の様にして SSI ディレクティブを使うことができます:</p>

    <div class="example"><h3>違う開始と終了のタグを使った SSI ディレクティブ</h3><p><code>
    
    &lt;%#printenv %&gt;
    </code></p></div>


<h3>参照</h3>
<ul>
<li><code class="directive"><a href="#ssiendtag">SSIEndTag</a></code></li>
</ul>
</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="SSITimeFormat" id="SSITimeFormat">SSITimeFormat</a> <a name="ssitimeformat" id="ssitimeformat">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>日付けを現す文字列の書式を設定する</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>SSITimeFormat <em>formatstring</em></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>SSITimeFormat "%A, %d-%b-%Y %H:%M:%S %Z"</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル, バーチャルホスト, ディレクトリ, .htaccess</td></tr>
<tr><th><a href="directive-dict.html#Override">上書き:</a></th><td>All</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Base</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_include</td></tr>
<tr><th><a href="directive-dict.html#Compatibility">互換性:</a></th><td>バージョン 2.0.30 以降で使用可能。</td></tr>
</table>
<p>このディレクティブは DATE 環境変数を echo して日付を現す文字列が
    表示されるときの書式を変更します。<em>formatstring</em> は
    C 標準ライブラリの strftime(3) と同じ形式です。</p>

    <p>このディレクティブは <code>&lt;!--#config
    timefmt=<em>formatstring</em> --&gt;</code> 要素と同じ効果になります。</p>

    <div class="example"><h3>例</h3><p><code>
    
    SSITimeFormat "%R, %B %d, %Y"
    </code></p></div>

    <p>上のディレクティブでは、日付は "22:26, June 14, 2002" という
    形式で表示されます。</p>


</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="SSIUndefinedEcho" id="SSIUndefinedEcho">SSIUndefinedEcho</a> <a name="ssiundefinedecho" id="ssiundefinedecho">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>未定義の変数が echo されたときに表示される文字列</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>SSIUndefinedEcho <em>tag</em></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>SSIUndefinedEcho "(none)"</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル, バーチャルホスト</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Base</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_include</td></tr>
<tr><th><a href="directive-dict.html#Compatibility">互換性:</a></th><td>バージョン 2.0.34 以降で使用可能。
</td></tr>
</table>
    <p>このディレクティブは変数が定義されていないにも関わらず
    "echo" されたときに mod_include が表示する文字列を
    変更します。</p>

    <div class="example"><h3>例</h3><p><code>
    
    SSIUndefinedEcho "&lt;!-- undef --&gt;"
    </code></p></div>


</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="XBitHack" id="XBitHack">XBitHack</a> <a name="xbithack" id="xbithack">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>実行ビットが設定されたファイルの SSI ディレクティブを
解析する</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>XBitHack on|off|full</code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>XBitHack off</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル, バーチャルホスト, ディレクトリ, .htaccess</td></tr>
<tr><th><a href="directive-dict.html#Override">上書き:</a></th><td>Options</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Base</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_include</td></tr>
</table>
    <p>XBitHack ディレクティブは通常の HTML ドキュメントの解析を
    制御します。このディレクティブは MIME タイプ <code>text/html</code>
    と関連付けられているファイルにのみ影響します。XBitHack は
    以下の値をとることができます:</p>

    <dl>
      <dt>off</dt>

      <dd>実行可能ファイルに対して特別な扱いをしません。</dd>

      <dt>on</dt>

      <dd>ユーザの実行ビットが設定されている text/html ファイルが
      SSI html ドキュメントとして扱われます。</dd>

      <dt>full</dt>

      <dd>
        <code>on</code> と同様ですが、グループ実行ビットもテストします。
        もしそれが設定されていれば、返されるファイルの Last-modified の
        日付をファイルの最終修正時刻にします。それが設定されていないときは、
        last-modified の日付は送られません。このビットを設定すると、
        クライアントやプロキシがリクエストをキャッシュできるようになります。

        <div class="note"><strong>注意:</strong> 他の CGI を <code>#include</code>
        するかもしれないものや、各アクセスに対して違う出力を生成する
        (もしくは後のリクエストで変わるかもしれないもの)
        すべての SSI スクリプトに対してグループ実行ビットが
        設定されていないことを確認できない場合は、full は使わない方が良い
        でしょう。</div>
      </dd>
    </dl>

    
</div>
</div>
<div class="bottomlang">
<p><span>Available Languages: </span><a href="../en/mod/mod_include.html" hreflang="en" rel="alternate" title="English">&nbsp;en&nbsp;</a> |
<a href="../ja/mod/mod_include.html" title="Japanese">&nbsp;ja&nbsp;</a></p>
</div><div id="footer">
<p class="apache">Copyright 1999-2004 The Apache Software Foundation.<br />Licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache License, Version 2.0</a>.</p>
<p class="menu"><a href="../mod/">モジュール</a> | <a href="../mod/directives.html">ディレクティブ</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">用語</a> | <a href="../sitemap.html">サイトマップ</a></p></div>
</body></html>