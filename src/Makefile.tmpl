# Apache makefile template (well, suffix).

# This is combined with the information in the "Configuration" file
# by the configure script to make the actual Makefile.

CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
LIBS=$(EXTRA_LIBS) $(LIBS1)
INCLUDES=$(INCLUDES1) $(EXTRA_INCLUDES)
LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)

OBJS= \
  core/alloc.o core/http_main.o core/http_core.o \
  core/http_config.o core/http_request.o core/http_log.o \
  core/http_protocol.o core/rfc1413.o core/util.o \
  core/util_script.o core/buff.o core/md5c.o \
  core/util_md5.o core/explain.o core/http_bprintf.o \
  core/util_date.o core/util_snprintf.o core/fnmatch.o \
  modules.o \
  $(OSOBJ) \
  $(MODULES)

.c.o:
	$(CC) -c $(INCLUDES) $(CFLAGS) $(SPACER) $<

all: @@Configuration@@ os-dir core-dir modules/last-built httpd 

@@Configuration@@: Configuration.tmpl
	@echo "@@Configuration@@ older than Configuration.tmpl, or doesn't exist."
	@echo "Consider copying Configuration.tmpl to @@Configuration@@, editing and rerunning"
	@echo "Configure."
	@echo "If not, you will at least have to touch @@Configuration@@."
	@false

httpd: $(REGLIB) $(OBJS)
	$(CC) $(LDFLAGS)  -o httpd $(OBJS) $(REGLIB) $(LIBS)

regex/libregex.a:
	(cd regex; $(MAKE) lib CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)')

modules/last-built:
	(cd modules; \
	$(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)')

support: support-dir

support-dir:
	cd support; $(MAKE)

core-dir:
	cd core; $(MAKE)

os-dir:	
	cd $(OSDIR); $(MAKE)

clean:
	rm -f httpd *.o $(OBJS) 
	cd core; $(MAKE) clean
	cd regex; $(MAKE) clean
	cd modules; $(MAKE) clean
	cd support; $(MAKE) clean

dist.tar: 
	# Assure a semi-sensible configuration going out...
	cp Makefile.orig Makefile
	cp modules.c.orig modules.c
	tar cvf dist.tar README INSTALL CHANGES TODO API.html \
		Configuration Configure Makefile.tmpl Makefile *.h *.c

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && $(CC) -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && mv Makefile.tmpl Makefile.tmpl.bak \
	    && mv Makefile.new Makefile.tmpl


#Dependencies

$(OBJS): Makefile

# DO NOT REMOVE
modules.o: modules.c core/httpd.h core/conf.h core/alloc.h core/buff.h \
 core/http_config.h
